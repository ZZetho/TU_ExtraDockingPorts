// TURD configs for the parts from Extra docking ports //

// docking port jr parachute //
@PART[ExtraDockingPorts-TinyModularParachute]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_ChuteJr
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_ChuteJr
	@MATERIAL
	{
		mesh = parachuteBase
		mesh = parachuteCap
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/TinyModularDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/TinyModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/TinyModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr_ChuteJr/TinyModularDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr_ChuteJr/TinyModularDockingPort_alt_paint
	}
}

// docking port mr parachute //
@PART[ExtraDockingPorts-SmallModularParachute]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_ChuteMr
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_ChuteMr
	@MATERIAL
	{
		mesh = parachuteBody
		mesh = parachuteCap
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/SmallModularDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/SmallModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/SmallModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr_ChuteMr/SmallModularDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr_ChuteMr/SmallModularDockingPort_alt_paint
	}
}

// compact docking port mr //
@PART[ExtraDockingPorts-SmallCompactDockingPort]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortCompact
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortCompact
	@MATERIAL
	{
		mesh = portBase
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/SmallModularDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/SmallModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/SmallModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DocingPortCompact/SmallModularDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DocingPortCompact/SmallModularDockingPort_alt_paint
	}
}

// modular docking port mr //
@PART[ExtraDockingPorts-SmallModularDockingPort]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour_Stripes
			displayName = Recolour Stripes
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortMr_Stripes
			}
			GAMEOBJECTS
			{
				portBase = true
				portBaseAlt = false
			}
		}
		VARIANT
		{
			name = Recolour_White
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortMr_White
			}
			GAMEOBJECTS
			{
				portBase = false
				portBaseAlt = true
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortMr_Stripes
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/SmallModularDockingPort
		texture = _BumpMap,ExtraDockingPorts/Parts/SmallModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/SmallModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr/SmallModularDockingPort_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr/SmallModularDockingPort_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortMr_White
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/SmallModularDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/SmallModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/SmallModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr/SmallModularDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortMr/SmallModularDockingPort_alt_paint
	}
}

// modular docking port jr //
@PART[ExtraDockingPorts-TinyModularDockingPort]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour_Stripes
			displayName = Recolour Stripes
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortJr_Stripes
			}
			GAMEOBJECTS
			{
				portBase = true
				portBaseAlt = false
			}
		}
		VARIANT
		{
			name = Recolour_White
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortJr_White
			}
			GAMEOBJECTS
			{
				portBase = false
				portBaseAlt = true
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortJr_Stripes
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/TinyModularDockingPort
		texture = _BumpMap,ExtraDockingPorts/Parts/TinyModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/TinyModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr/TinyModularDockingPort_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr/TinyModularDockingPort_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortJr_White
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/TinyModularDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/TinyModularDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/TinyModularDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr/TinyModularDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortJr/TinyModularDockingPort_alt_paint
	}
}

// docking port MS //
@PART[ExtraDockingPorts-MediumDockingPort]:FOR[999_TU_EDP_Recolour_000]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@MODULE[ModulePartVariants]
	{
		VARIANT
		{
			name = Recolour_Stripes
			displayName = Recolour Stripes
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortMs_Stripes
			}
			GAMEOBJECTS
			{
				portBase = true
				portBaseAlt = false
			}
		}
		VARIANT
		{
			name = Recolour_White
			displayName = Recolour White
			primaryColor = #ff0000
			secondaryColor = #00ff00
			EXTRA_INFO
			{
				textureSet = MWNN_Stock_Default_EDP_DockingPortMs_White
			}
			GAMEOBJECTS
			{
				portBase = false
				portBaseAlt = true
			}
		}
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortMs_Stripes
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/MediumDockingPort
		texture = _BumpMap,ExtraDockingPorts/Parts/MediumDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/MediumDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortMs/MediumDockingPort_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortMs/MediumDockingPort_paint
	}
}
+KSP_TEXTURE_SET[MWNN_Stock_Paint]:NEEDS[TexturesUnlimited&ExtraDockingPorts]
{
	@name = MWNN_Stock_Default_EDP_DockingPortMs_White
	@MATERIAL
	{
		mesh = portBase
		mesh = portBaseAlt
		mesh = portRotate
		
		vector = _DiffuseNorm,0.74,0.74,0.74
		vector = _MetalNorm,0.55,0.55,0.55
		vector = _SmoothnessNorm,0.55,0.55,0.55
		
		texture = _MainTex,ExtraDockingPorts/Parts/MediumDockingPort_alt
		texture = _BumpMap,ExtraDockingPorts/Parts/MediumDockingPort_n
		texture = _Emissive,ExtraDockingPorts/Parts/MediumDockingPort_e
		texture = _AOMap,TURD/TU_Standardised_Switching/000_PlaceholderTextures/Occ
		texture = _MetallicGlossMap,TURD/TU_ExtraDockingPorts/Textures/DockingPortMs/MediumDockingPort_alt_spec
		texture = _MaskTex,TURD/TU_ExtraDockingPorts/Textures/DockingPortMs/MediumDockingPort_alt_paint
	}
}